@page "/"
@using System.Text;

<PageTitle>Index</PageTitle>
<div id="index-home">
<h1>Hello, world!</h1>


@Interpreter.Pending
Welcome to your new app.
</div>

<div id="index-chat">
    <div id="chat-box">
        <div hidden="@showSuggestions" id="box-overlay"></div>
        <p>@Reading.MessagesToRead @Session.Alerts @Chat.MsgCount</p>
        @foreach (var message in SessionMessages)
        {
            <div id="chat-message" style="align-self:@message.txtAlignSelf; text-align:@message.txtAlign;">
                <p>@message.msgTimeStamp</p>
                <p>@message.msgSender</p>
                <p>@message.msgContent</p>
            </div>
        }
    </div>
    <div id="chat-input">
        <input @bind="ChatInput" @bind:event="oninput"/>
        <button onclick="@SndMessage">send</button>
    </div>
    <div id="chat-management">
        <button hidden="@HideStart" onclick="@StartSession">Start Session</button>
        <button hidden="@HideEnd" onclick="@EndSession">End Session</button>
        <button onclick="@UpdateTxt">Direct Update</button>
        <button onclick="@Suggestions">Chat Suggestions</button>
    </div>
</div>

@code {
    public bool HideStart { get; set; } = false;
    public bool HideEnd { get; set; } = true;
    public bool showSuggestions { get; set; } = true;
    public string ChatInput { get; set; } = "";

    public class Chat
    {
        public static int MsgCount { get; set; } = SessionMessages.Count();
        public static string MsgIncomingTxt { get; set; } = "";
        public static bool? MessagesIncoming { get; set; }

        static public void NewMessage()
        {
            SessionMessages.Add(new Message(Session.NowTxtTime, "The Administrator", MsgIncomingTxt, "end", "right"));
            Interpreter.MessagesReceived++;
        }

        static public void ReadMessage()
        {
            Reading.MessagesToRead = SessionMessages.GetRange(Reading.Bookmark, Reading.CountMessagesToRead).ToArray();
        }

        static public void CountMessages()
        {
            MsgCount = SessionMessages.Count();
        }
    }

    public class Message
    {
        public Message(string txtTimeStamp, string txtSender, string txtContent, string txt_alignself, string txt_align)
        {
            msgTimeStamp = txtTimeStamp;
            msgSender = txtSender;
            msgContent = txtContent;
            txtAlignSelf = txt_alignself;
            txtAlign = txt_align;
        }

        public string msgTimeStamp { get; set; }
        public string msgSender { get; set; }
        public string msgContent { get; set; }
        public string txtAlignSelf { get; set; }
        public string txtAlign { get; set; }
    }

    public static List<Message> SessionMessages = new List<Message>() {};

    void SndMessage()
    {
        if (Session.IsSessionActive == true)
        {
            SessionMessages.Add(new Message(Session.NowTxtTime, "Guest", ChatInput, "start", "left"));
            Chat.MessagesIncoming = false;
            Interpreter.MessagesSent++;
            Chat.MsgCount = SessionMessages.Count();
            Interpreter.NewInterpretation();
            ChatInput = "";
        }
        if (Session.IsSessionActive == false)
        {
            Session.Alerts = "Please start a session.";
        }
    }

    void StartSession()
    {
        HideStart = true;
        HideEnd = false;
        SessionMessages.Clear();
        Chat.MsgCount = 0;
        Session.IsSessionActive = true;
        Interpreter.NewInterpreter();
        SessionMessages.Add(new Message(Session.NowTxtTime, "The Administrator", "Welcome to Regentesse.info.", "end", "right"));
        Session.Alerts = "A new session has been initiated.";
        OutputBuilder.NewOutputBuilder();
    }

    void EndSession()
    {
        HideStart = false;
        HideEnd = true;
        Session.IsSessionActive = false;
        Session.Alerts = "Your session is ended.";
        Interpreter.MessagesSent = 0;
        Interpreter.MessagesReceived = 0;
        OutputBuilder.OutputReview();
    }

    void UpdateTxt()
    {
        ChatInput = "[Direct Update]";
        SndMessage();
        CurrentQuestion();
    }

    void Suggestions()
    {
        showSuggestions = false;
    }

    void CurrentQuestion()
    {
        if (Session.IsSessionActive == true)
        {
            SessionMessages.Add(new Message(Session.NowTxtTime, "The Administrator", "This is the most relevant.", "end", "right"));
            Chat.MessagesIncoming = true;
            Interpreter.MessagesReceived++;
        }
        // report current question
    }

    void SuggestedInput()
    {
        ChatInput = "[Suggested Input]";
        Reading.ChtState = 4; 
        // report suggestion
    }
}
